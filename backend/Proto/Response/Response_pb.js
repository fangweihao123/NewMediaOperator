// source: Response.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var MessagePerUserResponseBody_pb = require('./MessagePerUserResponseBody_pb.js');
goog.object.extend(proto, MessagePerUserResponseBody_pb);
var GetUserConversationListResponseBody_pb = require('./GetUserConversationListResponseBody_pb.js');
goog.object.extend(proto, GetUserConversationListResponseBody_pb);
var CreateConversationV2ResponseBody_pb = require('./CreateConversationV2ResponseBody_pb.js');
goog.object.extend(proto, CreateConversationV2ResponseBody_pb);
goog.exportSymbol('proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody', null, global);
goog.exportSymbol('proto.douyin.BroadcastRecvMessageResponseBody', null, global);
goog.exportSymbol('proto.douyin.ConversationAddParticipantsResponseBody', null, global);
goog.exportSymbol('proto.douyin.ConversationParticipantsListResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetConfigsResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetConversationCoreInfoResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetConversationInfoListV2ResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetConversationsCheckInfoResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetMessageByIdResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetMessagesCheckInfoInConversationResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetStrangerConversationListResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetStrangerMessagesResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetTicketResponseBody', null, global);
goog.exportSymbol('proto.douyin.GetUserMessageResponseBody', null, global);
goog.exportSymbol('proto.douyin.MessageByInitResponseBody', null, global);
goog.exportSymbol('proto.douyin.MessagesInConversationResponseBody', null, global);
goog.exportSymbol('proto.douyin.MessagesPerUserInitV2ResponseBody', null, global);
goog.exportSymbol('proto.douyin.MgetConversationParticipantsResponseBody', null, global);
goog.exportSymbol('proto.douyin.ModifyMessagePropertyResponseBody', null, global);
goog.exportSymbol('proto.douyin.NewMessageNotify', null, global);
goog.exportSymbol('proto.douyin.NewP2PMessageNotify', null, global);
goog.exportSymbol('proto.douyin.Response', null, global);
goog.exportSymbol('proto.douyin.ResponseBody', null, global);
goog.exportSymbol('proto.douyin.SendMessageResponseBody', null, global);
goog.exportSymbol('proto.douyin.SetConversationSettingInfoResponseBody', null, global);
goog.exportSymbol('proto.douyin.UnReadCountReportResponseBody', null, global);
goog.exportSymbol('proto.douyin.UpsertConversationSettingExtInfoResponseBody', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.Response.displayName = 'proto.douyin.Response';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.ResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, null);
};
goog.inherits(proto.douyin.ResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.ResponseBody.displayName = 'proto.douyin.ResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.SendMessageResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.SendMessageResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.SendMessageResponseBody.displayName = 'proto.douyin.SendMessageResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.MessagesPerUserInitV2ResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.MessagesPerUserInitV2ResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.MessagesPerUserInitV2ResponseBody.displayName = 'proto.douyin.MessagesPerUserInitV2ResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetMessageByIdResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetMessageByIdResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetMessageByIdResponseBody.displayName = 'proto.douyin.GetMessageByIdResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.MessagesInConversationResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.MessagesInConversationResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.MessagesInConversationResponseBody.displayName = 'proto.douyin.MessagesInConversationResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetMessagesCheckInfoInConversationResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetMessagesCheckInfoInConversationResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetMessagesCheckInfoInConversationResponseBody.displayName = 'proto.douyin.GetMessagesCheckInfoInConversationResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.NewMessageNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.NewMessageNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.NewMessageNotify.displayName = 'proto.douyin.NewMessageNotify';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.NewP2PMessageNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.NewP2PMessageNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.NewP2PMessageNotify.displayName = 'proto.douyin.NewP2PMessageNotify';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetConversationsCheckInfoResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetConversationsCheckInfoResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetConversationsCheckInfoResponseBody.displayName = 'proto.douyin.GetConversationsCheckInfoResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetConversationInfoListV2ResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetConversationInfoListV2ResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetConversationInfoListV2ResponseBody.displayName = 'proto.douyin.GetConversationInfoListV2ResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.ConversationParticipantsListResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.ConversationParticipantsListResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.ConversationParticipantsListResponseBody.displayName = 'proto.douyin.ConversationParticipantsListResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.ConversationAddParticipantsResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.ConversationAddParticipantsResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.ConversationAddParticipantsResponseBody.displayName = 'proto.douyin.ConversationAddParticipantsResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.MgetConversationParticipantsResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.MgetConversationParticipantsResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.MgetConversationParticipantsResponseBody.displayName = 'proto.douyin.MgetConversationParticipantsResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.ModifyMessagePropertyResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.ModifyMessagePropertyResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.ModifyMessagePropertyResponseBody.displayName = 'proto.douyin.ModifyMessagePropertyResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetConversationCoreInfoResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetConversationCoreInfoResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetConversationCoreInfoResponseBody.displayName = 'proto.douyin.GetConversationCoreInfoResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.SetConversationSettingInfoResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.SetConversationSettingInfoResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.SetConversationSettingInfoResponseBody.displayName = 'proto.douyin.SetConversationSettingInfoResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.UpsertConversationSettingExtInfoResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.UpsertConversationSettingExtInfoResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.UpsertConversationSettingExtInfoResponseBody.displayName = 'proto.douyin.UpsertConversationSettingExtInfoResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetStrangerConversationListResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetStrangerConversationListResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetStrangerConversationListResponseBody.displayName = 'proto.douyin.GetStrangerConversationListResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetStrangerMessagesResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetStrangerMessagesResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetStrangerMessagesResponseBody.displayName = 'proto.douyin.GetStrangerMessagesResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.displayName = 'proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.displayName = 'proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.displayName = 'proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetTicketResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetTicketResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetTicketResponseBody.displayName = 'proto.douyin.GetTicketResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.BroadcastRecvMessageResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.BroadcastRecvMessageResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.BroadcastRecvMessageResponseBody.displayName = 'proto.douyin.BroadcastRecvMessageResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetConfigsResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetConfigsResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetConfigsResponseBody.displayName = 'proto.douyin.GetConfigsResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.UnReadCountReportResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.UnReadCountReportResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.UnReadCountReportResponseBody.displayName = 'proto.douyin.UnReadCountReportResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.MessageByInitResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.MessageByInitResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.MessageByInitResponseBody.displayName = 'proto.douyin.MessageByInitResponseBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.GetUserMessageResponseBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.GetUserMessageResponseBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.GetUserMessageResponseBody.displayName = 'proto.douyin.GetUserMessageResponseBody';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.Response} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    cmd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sequenceId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    statusCode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    errorDesc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    inboxType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    body: (f = msg.getBody()) && proto.douyin.ResponseBody.toObject(includeInstance, f),
    logId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    startTimeStamp: jspb.Message.getFieldWithDefault(msg, 9, 0),
    requestArrivedTime: jspb.Message.getFieldWithDefault(msg, 10, 0),
    serverExecutionEndTime: jspb.Message.getFieldWithDefault(msg, 11, 0),
    pdesKey: jspb.Message.getFieldWithDefault(msg, 110, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.Response}
 */
proto.douyin.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.Response;
  return proto.douyin.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.Response}
 */
proto.douyin.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCmd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequenceId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatusCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorDesc(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInboxType(value);
      break;
    case 6:
      var value = new proto.douyin.ResponseBody;
      reader.readMessage(value,proto.douyin.ResponseBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogId(value);
      break;
    case 8:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartTimeStamp(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRequestArrivedTime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServerExecutionEndTime(value);
      break;
    case 110:
      var value = /** @type {string} */ (reader.readString());
      msg.setPdesKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.Response.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.Response} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.Response.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCmd();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSequenceId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStatusCode();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getErrorDesc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getInboxType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.douyin.ResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getLogId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getStartTimeStamp();
  if (f !== 0) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = message.getRequestArrivedTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getServerExecutionEndTime();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getPdesKey();
  if (f.length > 0) {
    writer.writeString(
      110,
      f
    );
  }
};


/**
 * optional int32 cmd = 1;
 * @return {number}
 */
proto.douyin.Response.prototype.getCmd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setCmd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 sequence_id = 2;
 * @return {number}
 */
proto.douyin.Response.prototype.getSequenceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setSequenceId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 status_code = 3;
 * @return {number}
 */
proto.douyin.Response.prototype.getStatusCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setStatusCode = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string error_desc = 4;
 * @return {string}
 */
proto.douyin.Response.prototype.getErrorDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setErrorDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 inbox_type = 5;
 * @return {number}
 */
proto.douyin.Response.prototype.getInboxType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setInboxType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional ResponseBody body = 6;
 * @return {?proto.douyin.ResponseBody}
 */
proto.douyin.Response.prototype.getBody = function() {
  return /** @type{?proto.douyin.ResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.ResponseBody, 6));
};


/**
 * @param {?proto.douyin.ResponseBody|undefined} value
 * @return {!proto.douyin.Response} returns this
*/
proto.douyin.Response.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.Response.prototype.hasBody = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string log_id = 7;
 * @return {string}
 */
proto.douyin.Response.prototype.getLogId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setLogId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, string> headers = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.douyin.Response.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
  return this;};


/**
 * optional int64 start_time_stamp = 9;
 * @return {number}
 */
proto.douyin.Response.prototype.getStartTimeStamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setStartTimeStamp = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 request_arrived_time = 10;
 * @return {number}
 */
proto.douyin.Response.prototype.getRequestArrivedTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setRequestArrivedTime = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 server_execution_end_time = 11;
 * @return {number}
 */
proto.douyin.Response.prototype.getServerExecutionEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setServerExecutionEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string pdes_key = 110;
 * @return {string}
 */
proto.douyin.Response.prototype.getPdesKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 110, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Response} returns this
 */
proto.douyin.Response.prototype.setPdesKey = function(value) {
  return jspb.Message.setProto3StringField(this, 110, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.ResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.ResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.ResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    sendMessageBody: (f = msg.getSendMessageBody()) && proto.douyin.SendMessageResponseBody.toObject(includeInstance, f),
    messagesPerUserBody: (f = msg.getMessagesPerUserBody()) && MessagePerUserResponseBody_pb.MessagePerUserResponseBody.toObject(includeInstance, f),
    messagesPerUserInitV2Body: (f = msg.getMessagesPerUserInitV2Body()) && proto.douyin.MessagesPerUserInitV2ResponseBody.toObject(includeInstance, f),
    getMessageByIdBody: (f = msg.getGetMessageByIdBody()) && proto.douyin.GetMessageByIdResponseBody.toObject(includeInstance, f),
    messagesInConversationBody: (f = msg.getMessagesInConversationBody()) && proto.douyin.MessagesInConversationResponseBody.toObject(includeInstance, f),
    getMessagesCheckinfoInConversationBody: (f = msg.getGetMessagesCheckinfoInConversationBody()) && proto.douyin.GetMessagesCheckInfoInConversationResponseBody.toObject(includeInstance, f),
    hasNewMessageNotify: (f = msg.getHasNewMessageNotify()) && proto.douyin.NewMessageNotify.toObject(includeInstance, f),
    hasNewP2pMessageNotify: (f = msg.getHasNewP2pMessageNotify()) && proto.douyin.NewP2PMessageNotify.toObject(includeInstance, f),
    getConversationsCheckinfoBody: (f = msg.getGetConversationsCheckinfoBody()) && proto.douyin.GetConversationsCheckInfoResponseBody.toObject(includeInstance, f),
    createConversationV2Body: (f = msg.getCreateConversationV2Body()) && CreateConversationV2ResponseBody_pb.CreateConversationV2ResponseBody.toObject(includeInstance, f),
    getConversationInfoListV2Body: (f = msg.getGetConversationInfoListV2Body()) && proto.douyin.GetConversationInfoListV2ResponseBody.toObject(includeInstance, f),
    conversationParticipantsBody: (f = msg.getConversationParticipantsBody()) && proto.douyin.ConversationParticipantsListResponseBody.toObject(includeInstance, f),
    conversationAddParticipantsBody: (f = msg.getConversationAddParticipantsBody()) && proto.douyin.ConversationAddParticipantsResponseBody.toObject(includeInstance, f),
    mgetConversationParticipantsBody: (f = msg.getMgetConversationParticipantsBody()) && proto.douyin.MgetConversationParticipantsResponseBody.toObject(includeInstance, f),
    modifyMessagePropertyBody: (f = msg.getModifyMessagePropertyBody()) && proto.douyin.ModifyMessagePropertyResponseBody.toObject(includeInstance, f),
    getConversationCoreInfoBody: (f = msg.getGetConversationCoreInfoBody()) && proto.douyin.GetConversationCoreInfoResponseBody.toObject(includeInstance, f),
    setConversationSettingInfoBody: (f = msg.getSetConversationSettingInfoBody()) && proto.douyin.SetConversationSettingInfoResponseBody.toObject(includeInstance, f),
    upsertConversationSettingExtInfoBody: (f = msg.getUpsertConversationSettingExtInfoBody()) && proto.douyin.UpsertConversationSettingExtInfoResponseBody.toObject(includeInstance, f),
    getStrangerConversationBody: (f = msg.getGetStrangerConversationBody()) && proto.douyin.GetStrangerConversationListResponseBody.toObject(includeInstance, f),
    getStrangerMessagesBody: (f = msg.getGetStrangerMessagesBody()) && proto.douyin.GetStrangerMessagesResponseBody.toObject(includeInstance, f),
    participantsReadIndexBody: (f = msg.getParticipantsReadIndexBody()) && proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.toObject(includeInstance, f),
    participantsMinIndexBody: (f = msg.getParticipantsMinIndexBody()) && proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.toObject(includeInstance, f),
    batchGetConversationParticipantsReadindex: (f = msg.getBatchGetConversationParticipantsReadindex()) && proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.toObject(includeInstance, f),
    getTicketBody: (f = msg.getGetTicketBody()) && proto.douyin.GetTicketResponseBody.toObject(includeInstance, f),
    getConversationListBody: (f = msg.getGetConversationListBody()) && GetUserConversationListResponseBody_pb.GetUserConversationListResponseBody.toObject(includeInstance, f),
    broadcastRecvMessageBody: (f = msg.getBroadcastRecvMessageBody()) && proto.douyin.BroadcastRecvMessageResponseBody.toObject(includeInstance, f),
    getConfigsBody: (f = msg.getGetConfigsBody()) && proto.douyin.GetConfigsResponseBody.toObject(includeInstance, f),
    unreadCountReportBody: (f = msg.getUnreadCountReportBody()) && proto.douyin.UnReadCountReportResponseBody.toObject(includeInstance, f),
    messageByInit: (f = msg.getMessageByInit()) && proto.douyin.MessageByInitResponseBody.toObject(includeInstance, f),
    getUserMessage: (f = msg.getGetUserMessage()) && proto.douyin.GetUserMessageResponseBody.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.ResponseBody}
 */
proto.douyin.ResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.ResponseBody;
  return proto.douyin.ResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.ResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.ResponseBody}
 */
proto.douyin.ResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.douyin.SendMessageResponseBody;
      reader.readMessage(value,proto.douyin.SendMessageResponseBody.deserializeBinaryFromReader);
      msg.setSendMessageBody(value);
      break;
    case 200:
      var value = new MessagePerUserResponseBody_pb.MessagePerUserResponseBody;
      reader.readMessage(value,MessagePerUserResponseBody_pb.MessagePerUserResponseBody.deserializeBinaryFromReader);
      msg.setMessagesPerUserBody(value);
      break;
    case 203:
      var value = new proto.douyin.MessagesPerUserInitV2ResponseBody;
      reader.readMessage(value,proto.douyin.MessagesPerUserInitV2ResponseBody.deserializeBinaryFromReader);
      msg.setMessagesPerUserInitV2Body(value);
      break;
    case 211:
      var value = new proto.douyin.GetMessageByIdResponseBody;
      reader.readMessage(value,proto.douyin.GetMessageByIdResponseBody.deserializeBinaryFromReader);
      msg.setGetMessageByIdBody(value);
      break;
    case 301:
      var value = new proto.douyin.MessagesInConversationResponseBody;
      reader.readMessage(value,proto.douyin.MessagesInConversationResponseBody.deserializeBinaryFromReader);
      msg.setMessagesInConversationBody(value);
      break;
    case 302:
      var value = new proto.douyin.GetMessagesCheckInfoInConversationResponseBody;
      reader.readMessage(value,proto.douyin.GetMessagesCheckInfoInConversationResponseBody.deserializeBinaryFromReader);
      msg.setGetMessagesCheckinfoInConversationBody(value);
      break;
    case 500:
      var value = new proto.douyin.NewMessageNotify;
      reader.readMessage(value,proto.douyin.NewMessageNotify.deserializeBinaryFromReader);
      msg.setHasNewMessageNotify(value);
      break;
    case 504:
      var value = new proto.douyin.NewP2PMessageNotify;
      reader.readMessage(value,proto.douyin.NewP2PMessageNotify.deserializeBinaryFromReader);
      msg.setHasNewP2pMessageNotify(value);
      break;
    case 615:
      var value = new proto.douyin.GetConversationsCheckInfoResponseBody;
      reader.readMessage(value,proto.douyin.GetConversationsCheckInfoResponseBody.deserializeBinaryFromReader);
      msg.setGetConversationsCheckinfoBody(value);
      break;
    case 609:
      var value = new CreateConversationV2ResponseBody_pb.CreateConversationV2ResponseBody;
      reader.readMessage(value,CreateConversationV2ResponseBody_pb.CreateConversationV2ResponseBody.deserializeBinaryFromReader);
      msg.setCreateConversationV2Body(value);
      break;
    case 610:
      var value = new proto.douyin.GetConversationInfoListV2ResponseBody;
      reader.readMessage(value,proto.douyin.GetConversationInfoListV2ResponseBody.deserializeBinaryFromReader);
      msg.setGetConversationInfoListV2Body(value);
      break;
    case 605:
      var value = new proto.douyin.ConversationParticipantsListResponseBody;
      reader.readMessage(value,proto.douyin.ConversationParticipantsListResponseBody.deserializeBinaryFromReader);
      msg.setConversationParticipantsBody(value);
      break;
    case 650:
      var value = new proto.douyin.ConversationAddParticipantsResponseBody;
      reader.readMessage(value,proto.douyin.ConversationAddParticipantsResponseBody.deserializeBinaryFromReader);
      msg.setConversationAddParticipantsBody(value);
      break;
    case 654:
      var value = new proto.douyin.MgetConversationParticipantsResponseBody;
      reader.readMessage(value,proto.douyin.MgetConversationParticipantsResponseBody.deserializeBinaryFromReader);
      msg.setMgetConversationParticipantsBody(value);
      break;
    case 705:
      var value = new proto.douyin.ModifyMessagePropertyResponseBody;
      reader.readMessage(value,proto.douyin.ModifyMessagePropertyResponseBody.deserializeBinaryFromReader);
      msg.setModifyMessagePropertyBody(value);
      break;
    case 901:
      var value = new proto.douyin.GetConversationCoreInfoResponseBody;
      reader.readMessage(value,proto.douyin.GetConversationCoreInfoResponseBody.deserializeBinaryFromReader);
      msg.setGetConversationCoreInfoBody(value);
      break;
    case 921:
      var value = new proto.douyin.SetConversationSettingInfoResponseBody;
      reader.readMessage(value,proto.douyin.SetConversationSettingInfoResponseBody.deserializeBinaryFromReader);
      msg.setSetConversationSettingInfoBody(value);
      break;
    case 922:
      var value = new proto.douyin.UpsertConversationSettingExtInfoResponseBody;
      reader.readMessage(value,proto.douyin.UpsertConversationSettingExtInfoResponseBody.deserializeBinaryFromReader);
      msg.setUpsertConversationSettingExtInfoBody(value);
      break;
    case 1000:
      var value = new proto.douyin.GetStrangerConversationListResponseBody;
      reader.readMessage(value,proto.douyin.GetStrangerConversationListResponseBody.deserializeBinaryFromReader);
      msg.setGetStrangerConversationBody(value);
      break;
    case 1001:
      var value = new proto.douyin.GetStrangerMessagesResponseBody;
      reader.readMessage(value,proto.douyin.GetStrangerMessagesResponseBody.deserializeBinaryFromReader);
      msg.setGetStrangerMessagesBody(value);
      break;
    case 2000:
      var value = new proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody;
      reader.readMessage(value,proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.deserializeBinaryFromReader);
      msg.setParticipantsReadIndexBody(value);
      break;
    case 2001:
      var value = new proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody;
      reader.readMessage(value,proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.deserializeBinaryFromReader);
      msg.setParticipantsMinIndexBody(value);
      break;
    case 2038:
      var value = new proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody;
      reader.readMessage(value,proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.deserializeBinaryFromReader);
      msg.setBatchGetConversationParticipantsReadindex(value);
      break;
    case 2005:
      var value = new proto.douyin.GetTicketResponseBody;
      reader.readMessage(value,proto.douyin.GetTicketResponseBody.deserializeBinaryFromReader);
      msg.setGetTicketBody(value);
      break;
    case 2006:
      var value = new GetUserConversationListResponseBody_pb.GetUserConversationListResponseBody;
      reader.readMessage(value,GetUserConversationListResponseBody_pb.GetUserConversationListResponseBody.deserializeBinaryFromReader);
      msg.setGetConversationListBody(value);
      break;
    case 2008:
      var value = new proto.douyin.BroadcastRecvMessageResponseBody;
      reader.readMessage(value,proto.douyin.BroadcastRecvMessageResponseBody.deserializeBinaryFromReader);
      msg.setBroadcastRecvMessageBody(value);
      break;
    case 2017:
      var value = new proto.douyin.GetConfigsResponseBody;
      reader.readMessage(value,proto.douyin.GetConfigsResponseBody.deserializeBinaryFromReader);
      msg.setGetConfigsBody(value);
      break;
    case 2018:
      var value = new proto.douyin.UnReadCountReportResponseBody;
      reader.readMessage(value,proto.douyin.UnReadCountReportResponseBody.deserializeBinaryFromReader);
      msg.setUnreadCountReportBody(value);
      break;
    case 2043:
      var value = new proto.douyin.MessageByInitResponseBody;
      reader.readMessage(value,proto.douyin.MessageByInitResponseBody.deserializeBinaryFromReader);
      msg.setMessageByInit(value);
      break;
    case 2048:
      var value = new proto.douyin.GetUserMessageResponseBody;
      reader.readMessage(value,proto.douyin.GetUserMessageResponseBody.deserializeBinaryFromReader);
      msg.setGetUserMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.ResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.ResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.ResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSendMessageBody();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.douyin.SendMessageResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getMessagesPerUserBody();
  if (f != null) {
    writer.writeMessage(
      200,
      f,
      MessagePerUserResponseBody_pb.MessagePerUserResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getMessagesPerUserInitV2Body();
  if (f != null) {
    writer.writeMessage(
      203,
      f,
      proto.douyin.MessagesPerUserInitV2ResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetMessageByIdBody();
  if (f != null) {
    writer.writeMessage(
      211,
      f,
      proto.douyin.GetMessageByIdResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getMessagesInConversationBody();
  if (f != null) {
    writer.writeMessage(
      301,
      f,
      proto.douyin.MessagesInConversationResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetMessagesCheckinfoInConversationBody();
  if (f != null) {
    writer.writeMessage(
      302,
      f,
      proto.douyin.GetMessagesCheckInfoInConversationResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getHasNewMessageNotify();
  if (f != null) {
    writer.writeMessage(
      500,
      f,
      proto.douyin.NewMessageNotify.serializeBinaryToWriter
    );
  }
  f = message.getHasNewP2pMessageNotify();
  if (f != null) {
    writer.writeMessage(
      504,
      f,
      proto.douyin.NewP2PMessageNotify.serializeBinaryToWriter
    );
  }
  f = message.getGetConversationsCheckinfoBody();
  if (f != null) {
    writer.writeMessage(
      615,
      f,
      proto.douyin.GetConversationsCheckInfoResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getCreateConversationV2Body();
  if (f != null) {
    writer.writeMessage(
      609,
      f,
      CreateConversationV2ResponseBody_pb.CreateConversationV2ResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetConversationInfoListV2Body();
  if (f != null) {
    writer.writeMessage(
      610,
      f,
      proto.douyin.GetConversationInfoListV2ResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getConversationParticipantsBody();
  if (f != null) {
    writer.writeMessage(
      605,
      f,
      proto.douyin.ConversationParticipantsListResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getConversationAddParticipantsBody();
  if (f != null) {
    writer.writeMessage(
      650,
      f,
      proto.douyin.ConversationAddParticipantsResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getMgetConversationParticipantsBody();
  if (f != null) {
    writer.writeMessage(
      654,
      f,
      proto.douyin.MgetConversationParticipantsResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getModifyMessagePropertyBody();
  if (f != null) {
    writer.writeMessage(
      705,
      f,
      proto.douyin.ModifyMessagePropertyResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetConversationCoreInfoBody();
  if (f != null) {
    writer.writeMessage(
      901,
      f,
      proto.douyin.GetConversationCoreInfoResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getSetConversationSettingInfoBody();
  if (f != null) {
    writer.writeMessage(
      921,
      f,
      proto.douyin.SetConversationSettingInfoResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getUpsertConversationSettingExtInfoBody();
  if (f != null) {
    writer.writeMessage(
      922,
      f,
      proto.douyin.UpsertConversationSettingExtInfoResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetStrangerConversationBody();
  if (f != null) {
    writer.writeMessage(
      1000,
      f,
      proto.douyin.GetStrangerConversationListResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetStrangerMessagesBody();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.douyin.GetStrangerMessagesResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getParticipantsReadIndexBody();
  if (f != null) {
    writer.writeMessage(
      2000,
      f,
      proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getParticipantsMinIndexBody();
  if (f != null) {
    writer.writeMessage(
      2001,
      f,
      proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getBatchGetConversationParticipantsReadindex();
  if (f != null) {
    writer.writeMessage(
      2038,
      f,
      proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetTicketBody();
  if (f != null) {
    writer.writeMessage(
      2005,
      f,
      proto.douyin.GetTicketResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetConversationListBody();
  if (f != null) {
    writer.writeMessage(
      2006,
      f,
      GetUserConversationListResponseBody_pb.GetUserConversationListResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getBroadcastRecvMessageBody();
  if (f != null) {
    writer.writeMessage(
      2008,
      f,
      proto.douyin.BroadcastRecvMessageResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetConfigsBody();
  if (f != null) {
    writer.writeMessage(
      2017,
      f,
      proto.douyin.GetConfigsResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getUnreadCountReportBody();
  if (f != null) {
    writer.writeMessage(
      2018,
      f,
      proto.douyin.UnReadCountReportResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getMessageByInit();
  if (f != null) {
    writer.writeMessage(
      2043,
      f,
      proto.douyin.MessageByInitResponseBody.serializeBinaryToWriter
    );
  }
  f = message.getGetUserMessage();
  if (f != null) {
    writer.writeMessage(
      2048,
      f,
      proto.douyin.GetUserMessageResponseBody.serializeBinaryToWriter
    );
  }
};


/**
 * optional SendMessageResponseBody send_message_body = 100;
 * @return {?proto.douyin.SendMessageResponseBody}
 */
proto.douyin.ResponseBody.prototype.getSendMessageBody = function() {
  return /** @type{?proto.douyin.SendMessageResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.SendMessageResponseBody, 100));
};


/**
 * @param {?proto.douyin.SendMessageResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setSendMessageBody = function(value) {
  return jspb.Message.setWrapperField(this, 100, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearSendMessageBody = function() {
  return this.setSendMessageBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasSendMessageBody = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional MessagePerUserResponseBody messages_per_user_body = 200;
 * @return {?proto.douyin.MessagePerUserResponseBody}
 */
proto.douyin.ResponseBody.prototype.getMessagesPerUserBody = function() {
  return /** @type{?proto.douyin.MessagePerUserResponseBody} */ (
    jspb.Message.getWrapperField(this, MessagePerUserResponseBody_pb.MessagePerUserResponseBody, 200));
};


/**
 * @param {?proto.douyin.MessagePerUserResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setMessagesPerUserBody = function(value) {
  return jspb.Message.setWrapperField(this, 200, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearMessagesPerUserBody = function() {
  return this.setMessagesPerUserBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasMessagesPerUserBody = function() {
  return jspb.Message.getField(this, 200) != null;
};


/**
 * optional MessagesPerUserInitV2ResponseBody messages_per_user_init_v2_body = 203;
 * @return {?proto.douyin.MessagesPerUserInitV2ResponseBody}
 */
proto.douyin.ResponseBody.prototype.getMessagesPerUserInitV2Body = function() {
  return /** @type{?proto.douyin.MessagesPerUserInitV2ResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.MessagesPerUserInitV2ResponseBody, 203));
};


/**
 * @param {?proto.douyin.MessagesPerUserInitV2ResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setMessagesPerUserInitV2Body = function(value) {
  return jspb.Message.setWrapperField(this, 203, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearMessagesPerUserInitV2Body = function() {
  return this.setMessagesPerUserInitV2Body(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasMessagesPerUserInitV2Body = function() {
  return jspb.Message.getField(this, 203) != null;
};


/**
 * optional GetMessageByIdResponseBody get_message_by_id_body = 211;
 * @return {?proto.douyin.GetMessageByIdResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetMessageByIdBody = function() {
  return /** @type{?proto.douyin.GetMessageByIdResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetMessageByIdResponseBody, 211));
};


/**
 * @param {?proto.douyin.GetMessageByIdResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetMessageByIdBody = function(value) {
  return jspb.Message.setWrapperField(this, 211, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetMessageByIdBody = function() {
  return this.setGetMessageByIdBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetMessageByIdBody = function() {
  return jspb.Message.getField(this, 211) != null;
};


/**
 * optional MessagesInConversationResponseBody messages_in_conversation_body = 301;
 * @return {?proto.douyin.MessagesInConversationResponseBody}
 */
proto.douyin.ResponseBody.prototype.getMessagesInConversationBody = function() {
  return /** @type{?proto.douyin.MessagesInConversationResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.MessagesInConversationResponseBody, 301));
};


/**
 * @param {?proto.douyin.MessagesInConversationResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setMessagesInConversationBody = function(value) {
  return jspb.Message.setWrapperField(this, 301, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearMessagesInConversationBody = function() {
  return this.setMessagesInConversationBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasMessagesInConversationBody = function() {
  return jspb.Message.getField(this, 301) != null;
};


/**
 * optional GetMessagesCheckInfoInConversationResponseBody get_messages_checkinfo_in_conversation_body = 302;
 * @return {?proto.douyin.GetMessagesCheckInfoInConversationResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetMessagesCheckinfoInConversationBody = function() {
  return /** @type{?proto.douyin.GetMessagesCheckInfoInConversationResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetMessagesCheckInfoInConversationResponseBody, 302));
};


/**
 * @param {?proto.douyin.GetMessagesCheckInfoInConversationResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetMessagesCheckinfoInConversationBody = function(value) {
  return jspb.Message.setWrapperField(this, 302, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetMessagesCheckinfoInConversationBody = function() {
  return this.setGetMessagesCheckinfoInConversationBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetMessagesCheckinfoInConversationBody = function() {
  return jspb.Message.getField(this, 302) != null;
};


/**
 * optional NewMessageNotify has_new_message_notify = 500;
 * @return {?proto.douyin.NewMessageNotify}
 */
proto.douyin.ResponseBody.prototype.getHasNewMessageNotify = function() {
  return /** @type{?proto.douyin.NewMessageNotify} */ (
    jspb.Message.getWrapperField(this, proto.douyin.NewMessageNotify, 500));
};


/**
 * @param {?proto.douyin.NewMessageNotify|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setHasNewMessageNotify = function(value) {
  return jspb.Message.setWrapperField(this, 500, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearHasNewMessageNotify = function() {
  return this.setHasNewMessageNotify(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasHasNewMessageNotify = function() {
  return jspb.Message.getField(this, 500) != null;
};


/**
 * optional NewP2PMessageNotify has_new_p2p_message_notify = 504;
 * @return {?proto.douyin.NewP2PMessageNotify}
 */
proto.douyin.ResponseBody.prototype.getHasNewP2pMessageNotify = function() {
  return /** @type{?proto.douyin.NewP2PMessageNotify} */ (
    jspb.Message.getWrapperField(this, proto.douyin.NewP2PMessageNotify, 504));
};


/**
 * @param {?proto.douyin.NewP2PMessageNotify|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setHasNewP2pMessageNotify = function(value) {
  return jspb.Message.setWrapperField(this, 504, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearHasNewP2pMessageNotify = function() {
  return this.setHasNewP2pMessageNotify(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasHasNewP2pMessageNotify = function() {
  return jspb.Message.getField(this, 504) != null;
};


/**
 * optional GetConversationsCheckInfoResponseBody get_conversations_checkinfo_body = 615;
 * @return {?proto.douyin.GetConversationsCheckInfoResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetConversationsCheckinfoBody = function() {
  return /** @type{?proto.douyin.GetConversationsCheckInfoResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetConversationsCheckInfoResponseBody, 615));
};


/**
 * @param {?proto.douyin.GetConversationsCheckInfoResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetConversationsCheckinfoBody = function(value) {
  return jspb.Message.setWrapperField(this, 615, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetConversationsCheckinfoBody = function() {
  return this.setGetConversationsCheckinfoBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetConversationsCheckinfoBody = function() {
  return jspb.Message.getField(this, 615) != null;
};


/**
 * optional CreateConversationV2ResponseBody create_conversation_v2_body = 609;
 * @return {?proto.douyin.CreateConversationV2ResponseBody}
 */
proto.douyin.ResponseBody.prototype.getCreateConversationV2Body = function() {
  return /** @type{?proto.douyin.CreateConversationV2ResponseBody} */ (
    jspb.Message.getWrapperField(this, CreateConversationV2ResponseBody_pb.CreateConversationV2ResponseBody, 609));
};


/**
 * @param {?proto.douyin.CreateConversationV2ResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setCreateConversationV2Body = function(value) {
  return jspb.Message.setWrapperField(this, 609, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearCreateConversationV2Body = function() {
  return this.setCreateConversationV2Body(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasCreateConversationV2Body = function() {
  return jspb.Message.getField(this, 609) != null;
};


/**
 * optional GetConversationInfoListV2ResponseBody get_conversation_info_list_v2_body = 610;
 * @return {?proto.douyin.GetConversationInfoListV2ResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetConversationInfoListV2Body = function() {
  return /** @type{?proto.douyin.GetConversationInfoListV2ResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetConversationInfoListV2ResponseBody, 610));
};


/**
 * @param {?proto.douyin.GetConversationInfoListV2ResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetConversationInfoListV2Body = function(value) {
  return jspb.Message.setWrapperField(this, 610, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetConversationInfoListV2Body = function() {
  return this.setGetConversationInfoListV2Body(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetConversationInfoListV2Body = function() {
  return jspb.Message.getField(this, 610) != null;
};


/**
 * optional ConversationParticipantsListResponseBody conversation_participants_body = 605;
 * @return {?proto.douyin.ConversationParticipantsListResponseBody}
 */
proto.douyin.ResponseBody.prototype.getConversationParticipantsBody = function() {
  return /** @type{?proto.douyin.ConversationParticipantsListResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.ConversationParticipantsListResponseBody, 605));
};


/**
 * @param {?proto.douyin.ConversationParticipantsListResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setConversationParticipantsBody = function(value) {
  return jspb.Message.setWrapperField(this, 605, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearConversationParticipantsBody = function() {
  return this.setConversationParticipantsBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasConversationParticipantsBody = function() {
  return jspb.Message.getField(this, 605) != null;
};


/**
 * optional ConversationAddParticipantsResponseBody conversation_add_participants_body = 650;
 * @return {?proto.douyin.ConversationAddParticipantsResponseBody}
 */
proto.douyin.ResponseBody.prototype.getConversationAddParticipantsBody = function() {
  return /** @type{?proto.douyin.ConversationAddParticipantsResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.ConversationAddParticipantsResponseBody, 650));
};


/**
 * @param {?proto.douyin.ConversationAddParticipantsResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setConversationAddParticipantsBody = function(value) {
  return jspb.Message.setWrapperField(this, 650, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearConversationAddParticipantsBody = function() {
  return this.setConversationAddParticipantsBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasConversationAddParticipantsBody = function() {
  return jspb.Message.getField(this, 650) != null;
};


/**
 * optional MgetConversationParticipantsResponseBody mget_conversation_participants_body = 654;
 * @return {?proto.douyin.MgetConversationParticipantsResponseBody}
 */
proto.douyin.ResponseBody.prototype.getMgetConversationParticipantsBody = function() {
  return /** @type{?proto.douyin.MgetConversationParticipantsResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.MgetConversationParticipantsResponseBody, 654));
};


/**
 * @param {?proto.douyin.MgetConversationParticipantsResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setMgetConversationParticipantsBody = function(value) {
  return jspb.Message.setWrapperField(this, 654, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearMgetConversationParticipantsBody = function() {
  return this.setMgetConversationParticipantsBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasMgetConversationParticipantsBody = function() {
  return jspb.Message.getField(this, 654) != null;
};


/**
 * optional ModifyMessagePropertyResponseBody modify_message_property_body = 705;
 * @return {?proto.douyin.ModifyMessagePropertyResponseBody}
 */
proto.douyin.ResponseBody.prototype.getModifyMessagePropertyBody = function() {
  return /** @type{?proto.douyin.ModifyMessagePropertyResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.ModifyMessagePropertyResponseBody, 705));
};


/**
 * @param {?proto.douyin.ModifyMessagePropertyResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setModifyMessagePropertyBody = function(value) {
  return jspb.Message.setWrapperField(this, 705, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearModifyMessagePropertyBody = function() {
  return this.setModifyMessagePropertyBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasModifyMessagePropertyBody = function() {
  return jspb.Message.getField(this, 705) != null;
};


/**
 * optional GetConversationCoreInfoResponseBody get_conversation_core_info_body = 901;
 * @return {?proto.douyin.GetConversationCoreInfoResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetConversationCoreInfoBody = function() {
  return /** @type{?proto.douyin.GetConversationCoreInfoResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetConversationCoreInfoResponseBody, 901));
};


/**
 * @param {?proto.douyin.GetConversationCoreInfoResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetConversationCoreInfoBody = function(value) {
  return jspb.Message.setWrapperField(this, 901, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetConversationCoreInfoBody = function() {
  return this.setGetConversationCoreInfoBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetConversationCoreInfoBody = function() {
  return jspb.Message.getField(this, 901) != null;
};


/**
 * optional SetConversationSettingInfoResponseBody set_conversation_setting_info_body = 921;
 * @return {?proto.douyin.SetConversationSettingInfoResponseBody}
 */
proto.douyin.ResponseBody.prototype.getSetConversationSettingInfoBody = function() {
  return /** @type{?proto.douyin.SetConversationSettingInfoResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.SetConversationSettingInfoResponseBody, 921));
};


/**
 * @param {?proto.douyin.SetConversationSettingInfoResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setSetConversationSettingInfoBody = function(value) {
  return jspb.Message.setWrapperField(this, 921, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearSetConversationSettingInfoBody = function() {
  return this.setSetConversationSettingInfoBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasSetConversationSettingInfoBody = function() {
  return jspb.Message.getField(this, 921) != null;
};


/**
 * optional UpsertConversationSettingExtInfoResponseBody upsert_conversation_setting_ext_info_body = 922;
 * @return {?proto.douyin.UpsertConversationSettingExtInfoResponseBody}
 */
proto.douyin.ResponseBody.prototype.getUpsertConversationSettingExtInfoBody = function() {
  return /** @type{?proto.douyin.UpsertConversationSettingExtInfoResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.UpsertConversationSettingExtInfoResponseBody, 922));
};


/**
 * @param {?proto.douyin.UpsertConversationSettingExtInfoResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setUpsertConversationSettingExtInfoBody = function(value) {
  return jspb.Message.setWrapperField(this, 922, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearUpsertConversationSettingExtInfoBody = function() {
  return this.setUpsertConversationSettingExtInfoBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasUpsertConversationSettingExtInfoBody = function() {
  return jspb.Message.getField(this, 922) != null;
};


/**
 * optional GetStrangerConversationListResponseBody get_stranger_conversation_body = 1000;
 * @return {?proto.douyin.GetStrangerConversationListResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetStrangerConversationBody = function() {
  return /** @type{?proto.douyin.GetStrangerConversationListResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetStrangerConversationListResponseBody, 1000));
};


/**
 * @param {?proto.douyin.GetStrangerConversationListResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetStrangerConversationBody = function(value) {
  return jspb.Message.setWrapperField(this, 1000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetStrangerConversationBody = function() {
  return this.setGetStrangerConversationBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetStrangerConversationBody = function() {
  return jspb.Message.getField(this, 1000) != null;
};


/**
 * optional GetStrangerMessagesResponseBody get_stranger_messages_body = 1001;
 * @return {?proto.douyin.GetStrangerMessagesResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetStrangerMessagesBody = function() {
  return /** @type{?proto.douyin.GetStrangerMessagesResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetStrangerMessagesResponseBody, 1001));
};


/**
 * @param {?proto.douyin.GetStrangerMessagesResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetStrangerMessagesBody = function(value) {
  return jspb.Message.setWrapperField(this, 1001, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetStrangerMessagesBody = function() {
  return this.setGetStrangerMessagesBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetStrangerMessagesBody = function() {
  return jspb.Message.getField(this, 1001) != null;
};


/**
 * optional GetConversationParticipantsReadIndexV3ResponseBody participants_read_index_body = 2000;
 * @return {?proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody}
 */
proto.douyin.ResponseBody.prototype.getParticipantsReadIndexBody = function() {
  return /** @type{?proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody, 2000));
};


/**
 * @param {?proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setParticipantsReadIndexBody = function(value) {
  return jspb.Message.setWrapperField(this, 2000, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearParticipantsReadIndexBody = function() {
  return this.setParticipantsReadIndexBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasParticipantsReadIndexBody = function() {
  return jspb.Message.getField(this, 2000) != null;
};


/**
 * optional GetConversationParticipantsMinIndexV3ResponseBody participants_min_index_body = 2001;
 * @return {?proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody}
 */
proto.douyin.ResponseBody.prototype.getParticipantsMinIndexBody = function() {
  return /** @type{?proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody, 2001));
};


/**
 * @param {?proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setParticipantsMinIndexBody = function(value) {
  return jspb.Message.setWrapperField(this, 2001, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearParticipantsMinIndexBody = function() {
  return this.setParticipantsMinIndexBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasParticipantsMinIndexBody = function() {
  return jspb.Message.getField(this, 2001) != null;
};


/**
 * optional BatchGetConversationParticipantsReadIndexResponseBody batch_get_conversation_participants_readindex = 2038;
 * @return {?proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody}
 */
proto.douyin.ResponseBody.prototype.getBatchGetConversationParticipantsReadindex = function() {
  return /** @type{?proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody, 2038));
};


/**
 * @param {?proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setBatchGetConversationParticipantsReadindex = function(value) {
  return jspb.Message.setWrapperField(this, 2038, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearBatchGetConversationParticipantsReadindex = function() {
  return this.setBatchGetConversationParticipantsReadindex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasBatchGetConversationParticipantsReadindex = function() {
  return jspb.Message.getField(this, 2038) != null;
};


/**
 * optional GetTicketResponseBody get_ticket_body = 2005;
 * @return {?proto.douyin.GetTicketResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetTicketBody = function() {
  return /** @type{?proto.douyin.GetTicketResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetTicketResponseBody, 2005));
};


/**
 * @param {?proto.douyin.GetTicketResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetTicketBody = function(value) {
  return jspb.Message.setWrapperField(this, 2005, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetTicketBody = function() {
  return this.setGetTicketBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetTicketBody = function() {
  return jspb.Message.getField(this, 2005) != null;
};


/**
 * optional GetUserConversationListResponseBody get_conversation_list_body = 2006;
 * @return {?proto.douyin.GetUserConversationListResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetConversationListBody = function() {
  return /** @type{?proto.douyin.GetUserConversationListResponseBody} */ (
    jspb.Message.getWrapperField(this, GetUserConversationListResponseBody_pb.GetUserConversationListResponseBody, 2006));
};


/**
 * @param {?proto.douyin.GetUserConversationListResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetConversationListBody = function(value) {
  return jspb.Message.setWrapperField(this, 2006, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetConversationListBody = function() {
  return this.setGetConversationListBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetConversationListBody = function() {
  return jspb.Message.getField(this, 2006) != null;
};


/**
 * optional BroadcastRecvMessageResponseBody broadcast_recv_message_body = 2008;
 * @return {?proto.douyin.BroadcastRecvMessageResponseBody}
 */
proto.douyin.ResponseBody.prototype.getBroadcastRecvMessageBody = function() {
  return /** @type{?proto.douyin.BroadcastRecvMessageResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.BroadcastRecvMessageResponseBody, 2008));
};


/**
 * @param {?proto.douyin.BroadcastRecvMessageResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setBroadcastRecvMessageBody = function(value) {
  return jspb.Message.setWrapperField(this, 2008, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearBroadcastRecvMessageBody = function() {
  return this.setBroadcastRecvMessageBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasBroadcastRecvMessageBody = function() {
  return jspb.Message.getField(this, 2008) != null;
};


/**
 * optional GetConfigsResponseBody get_configs_body = 2017;
 * @return {?proto.douyin.GetConfigsResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetConfigsBody = function() {
  return /** @type{?proto.douyin.GetConfigsResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetConfigsResponseBody, 2017));
};


/**
 * @param {?proto.douyin.GetConfigsResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetConfigsBody = function(value) {
  return jspb.Message.setWrapperField(this, 2017, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetConfigsBody = function() {
  return this.setGetConfigsBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetConfigsBody = function() {
  return jspb.Message.getField(this, 2017) != null;
};


/**
 * optional UnReadCountReportResponseBody unread_count_report_body = 2018;
 * @return {?proto.douyin.UnReadCountReportResponseBody}
 */
proto.douyin.ResponseBody.prototype.getUnreadCountReportBody = function() {
  return /** @type{?proto.douyin.UnReadCountReportResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.UnReadCountReportResponseBody, 2018));
};


/**
 * @param {?proto.douyin.UnReadCountReportResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setUnreadCountReportBody = function(value) {
  return jspb.Message.setWrapperField(this, 2018, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearUnreadCountReportBody = function() {
  return this.setUnreadCountReportBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasUnreadCountReportBody = function() {
  return jspb.Message.getField(this, 2018) != null;
};


/**
 * optional MessageByInitResponseBody message_by_init = 2043;
 * @return {?proto.douyin.MessageByInitResponseBody}
 */
proto.douyin.ResponseBody.prototype.getMessageByInit = function() {
  return /** @type{?proto.douyin.MessageByInitResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.MessageByInitResponseBody, 2043));
};


/**
 * @param {?proto.douyin.MessageByInitResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setMessageByInit = function(value) {
  return jspb.Message.setWrapperField(this, 2043, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearMessageByInit = function() {
  return this.setMessageByInit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasMessageByInit = function() {
  return jspb.Message.getField(this, 2043) != null;
};


/**
 * optional GetUserMessageResponseBody get_user_message = 2048;
 * @return {?proto.douyin.GetUserMessageResponseBody}
 */
proto.douyin.ResponseBody.prototype.getGetUserMessage = function() {
  return /** @type{?proto.douyin.GetUserMessageResponseBody} */ (
    jspb.Message.getWrapperField(this, proto.douyin.GetUserMessageResponseBody, 2048));
};


/**
 * @param {?proto.douyin.GetUserMessageResponseBody|undefined} value
 * @return {!proto.douyin.ResponseBody} returns this
*/
proto.douyin.ResponseBody.prototype.setGetUserMessage = function(value) {
  return jspb.Message.setWrapperField(this, 2048, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.ResponseBody} returns this
 */
proto.douyin.ResponseBody.prototype.clearGetUserMessage = function() {
  return this.setGetUserMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.ResponseBody.prototype.hasGetUserMessage = function() {
  return jspb.Message.getField(this, 2048) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.SendMessageResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.SendMessageResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.SendMessageResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.SendMessageResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.SendMessageResponseBody}
 */
proto.douyin.SendMessageResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.SendMessageResponseBody;
  return proto.douyin.SendMessageResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.SendMessageResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.SendMessageResponseBody}
 */
proto.douyin.SendMessageResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.SendMessageResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.SendMessageResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.SendMessageResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.SendMessageResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.MessagesPerUserInitV2ResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.MessagesPerUserInitV2ResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.MessagesPerUserInitV2ResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MessagesPerUserInitV2ResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.MessagesPerUserInitV2ResponseBody}
 */
proto.douyin.MessagesPerUserInitV2ResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.MessagesPerUserInitV2ResponseBody;
  return proto.douyin.MessagesPerUserInitV2ResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.MessagesPerUserInitV2ResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.MessagesPerUserInitV2ResponseBody}
 */
proto.douyin.MessagesPerUserInitV2ResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.MessagesPerUserInitV2ResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.MessagesPerUserInitV2ResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.MessagesPerUserInitV2ResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MessagesPerUserInitV2ResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetMessageByIdResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetMessageByIdResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetMessageByIdResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetMessageByIdResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetMessageByIdResponseBody}
 */
proto.douyin.GetMessageByIdResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetMessageByIdResponseBody;
  return proto.douyin.GetMessageByIdResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetMessageByIdResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetMessageByIdResponseBody}
 */
proto.douyin.GetMessageByIdResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetMessageByIdResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetMessageByIdResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetMessageByIdResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetMessageByIdResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.MessagesInConversationResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.MessagesInConversationResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.MessagesInConversationResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MessagesInConversationResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.MessagesInConversationResponseBody}
 */
proto.douyin.MessagesInConversationResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.MessagesInConversationResponseBody;
  return proto.douyin.MessagesInConversationResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.MessagesInConversationResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.MessagesInConversationResponseBody}
 */
proto.douyin.MessagesInConversationResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.MessagesInConversationResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.MessagesInConversationResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.MessagesInConversationResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MessagesInConversationResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetMessagesCheckInfoInConversationResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetMessagesCheckInfoInConversationResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetMessagesCheckInfoInConversationResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetMessagesCheckInfoInConversationResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetMessagesCheckInfoInConversationResponseBody}
 */
proto.douyin.GetMessagesCheckInfoInConversationResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetMessagesCheckInfoInConversationResponseBody;
  return proto.douyin.GetMessagesCheckInfoInConversationResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetMessagesCheckInfoInConversationResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetMessagesCheckInfoInConversationResponseBody}
 */
proto.douyin.GetMessagesCheckInfoInConversationResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetMessagesCheckInfoInConversationResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetMessagesCheckInfoInConversationResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetMessagesCheckInfoInConversationResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetMessagesCheckInfoInConversationResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.NewMessageNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.NewMessageNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.NewMessageNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.NewMessageNotify.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.NewMessageNotify}
 */
proto.douyin.NewMessageNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.NewMessageNotify;
  return proto.douyin.NewMessageNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.NewMessageNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.NewMessageNotify}
 */
proto.douyin.NewMessageNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.NewMessageNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.NewMessageNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.NewMessageNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.NewMessageNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.NewP2PMessageNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.NewP2PMessageNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.NewP2PMessageNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.NewP2PMessageNotify.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.NewP2PMessageNotify}
 */
proto.douyin.NewP2PMessageNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.NewP2PMessageNotify;
  return proto.douyin.NewP2PMessageNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.NewP2PMessageNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.NewP2PMessageNotify}
 */
proto.douyin.NewP2PMessageNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.NewP2PMessageNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.NewP2PMessageNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.NewP2PMessageNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.NewP2PMessageNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetConversationsCheckInfoResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetConversationsCheckInfoResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetConversationsCheckInfoResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationsCheckInfoResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetConversationsCheckInfoResponseBody}
 */
proto.douyin.GetConversationsCheckInfoResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetConversationsCheckInfoResponseBody;
  return proto.douyin.GetConversationsCheckInfoResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetConversationsCheckInfoResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetConversationsCheckInfoResponseBody}
 */
proto.douyin.GetConversationsCheckInfoResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetConversationsCheckInfoResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetConversationsCheckInfoResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetConversationsCheckInfoResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationsCheckInfoResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetConversationInfoListV2ResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetConversationInfoListV2ResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetConversationInfoListV2ResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationInfoListV2ResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetConversationInfoListV2ResponseBody}
 */
proto.douyin.GetConversationInfoListV2ResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetConversationInfoListV2ResponseBody;
  return proto.douyin.GetConversationInfoListV2ResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetConversationInfoListV2ResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetConversationInfoListV2ResponseBody}
 */
proto.douyin.GetConversationInfoListV2ResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetConversationInfoListV2ResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetConversationInfoListV2ResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetConversationInfoListV2ResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationInfoListV2ResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.ConversationParticipantsListResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.ConversationParticipantsListResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.ConversationParticipantsListResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ConversationParticipantsListResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.ConversationParticipantsListResponseBody}
 */
proto.douyin.ConversationParticipantsListResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.ConversationParticipantsListResponseBody;
  return proto.douyin.ConversationParticipantsListResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.ConversationParticipantsListResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.ConversationParticipantsListResponseBody}
 */
proto.douyin.ConversationParticipantsListResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.ConversationParticipantsListResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.ConversationParticipantsListResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.ConversationParticipantsListResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ConversationParticipantsListResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.ConversationAddParticipantsResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.ConversationAddParticipantsResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.ConversationAddParticipantsResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ConversationAddParticipantsResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.ConversationAddParticipantsResponseBody}
 */
proto.douyin.ConversationAddParticipantsResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.ConversationAddParticipantsResponseBody;
  return proto.douyin.ConversationAddParticipantsResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.ConversationAddParticipantsResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.ConversationAddParticipantsResponseBody}
 */
proto.douyin.ConversationAddParticipantsResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.ConversationAddParticipantsResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.ConversationAddParticipantsResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.ConversationAddParticipantsResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ConversationAddParticipantsResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.MgetConversationParticipantsResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.MgetConversationParticipantsResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.MgetConversationParticipantsResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MgetConversationParticipantsResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.MgetConversationParticipantsResponseBody}
 */
proto.douyin.MgetConversationParticipantsResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.MgetConversationParticipantsResponseBody;
  return proto.douyin.MgetConversationParticipantsResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.MgetConversationParticipantsResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.MgetConversationParticipantsResponseBody}
 */
proto.douyin.MgetConversationParticipantsResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.MgetConversationParticipantsResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.MgetConversationParticipantsResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.MgetConversationParticipantsResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MgetConversationParticipantsResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.ModifyMessagePropertyResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.ModifyMessagePropertyResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.ModifyMessagePropertyResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ModifyMessagePropertyResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.ModifyMessagePropertyResponseBody}
 */
proto.douyin.ModifyMessagePropertyResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.ModifyMessagePropertyResponseBody;
  return proto.douyin.ModifyMessagePropertyResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.ModifyMessagePropertyResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.ModifyMessagePropertyResponseBody}
 */
proto.douyin.ModifyMessagePropertyResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.ModifyMessagePropertyResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.ModifyMessagePropertyResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.ModifyMessagePropertyResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.ModifyMessagePropertyResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetConversationCoreInfoResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetConversationCoreInfoResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetConversationCoreInfoResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationCoreInfoResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetConversationCoreInfoResponseBody}
 */
proto.douyin.GetConversationCoreInfoResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetConversationCoreInfoResponseBody;
  return proto.douyin.GetConversationCoreInfoResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetConversationCoreInfoResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetConversationCoreInfoResponseBody}
 */
proto.douyin.GetConversationCoreInfoResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetConversationCoreInfoResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetConversationCoreInfoResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetConversationCoreInfoResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationCoreInfoResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.SetConversationSettingInfoResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.SetConversationSettingInfoResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.SetConversationSettingInfoResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.SetConversationSettingInfoResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.SetConversationSettingInfoResponseBody}
 */
proto.douyin.SetConversationSettingInfoResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.SetConversationSettingInfoResponseBody;
  return proto.douyin.SetConversationSettingInfoResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.SetConversationSettingInfoResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.SetConversationSettingInfoResponseBody}
 */
proto.douyin.SetConversationSettingInfoResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.SetConversationSettingInfoResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.SetConversationSettingInfoResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.SetConversationSettingInfoResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.SetConversationSettingInfoResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.UpsertConversationSettingExtInfoResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.UpsertConversationSettingExtInfoResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.UpsertConversationSettingExtInfoResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.UpsertConversationSettingExtInfoResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.UpsertConversationSettingExtInfoResponseBody}
 */
proto.douyin.UpsertConversationSettingExtInfoResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.UpsertConversationSettingExtInfoResponseBody;
  return proto.douyin.UpsertConversationSettingExtInfoResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.UpsertConversationSettingExtInfoResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.UpsertConversationSettingExtInfoResponseBody}
 */
proto.douyin.UpsertConversationSettingExtInfoResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.UpsertConversationSettingExtInfoResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.UpsertConversationSettingExtInfoResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.UpsertConversationSettingExtInfoResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.UpsertConversationSettingExtInfoResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetStrangerConversationListResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetStrangerConversationListResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetStrangerConversationListResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetStrangerConversationListResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetStrangerConversationListResponseBody}
 */
proto.douyin.GetStrangerConversationListResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetStrangerConversationListResponseBody;
  return proto.douyin.GetStrangerConversationListResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetStrangerConversationListResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetStrangerConversationListResponseBody}
 */
proto.douyin.GetStrangerConversationListResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetStrangerConversationListResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetStrangerConversationListResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetStrangerConversationListResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetStrangerConversationListResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetStrangerMessagesResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetStrangerMessagesResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetStrangerMessagesResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetStrangerMessagesResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetStrangerMessagesResponseBody}
 */
proto.douyin.GetStrangerMessagesResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetStrangerMessagesResponseBody;
  return proto.douyin.GetStrangerMessagesResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetStrangerMessagesResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetStrangerMessagesResponseBody}
 */
proto.douyin.GetStrangerMessagesResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetStrangerMessagesResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetStrangerMessagesResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetStrangerMessagesResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetStrangerMessagesResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody}
 */
proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody;
  return proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody}
 */
proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationParticipantsReadIndexV3ResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody}
 */
proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody;
  return proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody}
 */
proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConversationParticipantsMinIndexV3ResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody}
 */
proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody;
  return proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody}
 */
proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.BatchGetConversationParticipantsReadIndexResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetTicketResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetTicketResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetTicketResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetTicketResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetTicketResponseBody}
 */
proto.douyin.GetTicketResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetTicketResponseBody;
  return proto.douyin.GetTicketResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetTicketResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetTicketResponseBody}
 */
proto.douyin.GetTicketResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetTicketResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetTicketResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetTicketResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetTicketResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.BroadcastRecvMessageResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.BroadcastRecvMessageResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.BroadcastRecvMessageResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.BroadcastRecvMessageResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.BroadcastRecvMessageResponseBody}
 */
proto.douyin.BroadcastRecvMessageResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.BroadcastRecvMessageResponseBody;
  return proto.douyin.BroadcastRecvMessageResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.BroadcastRecvMessageResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.BroadcastRecvMessageResponseBody}
 */
proto.douyin.BroadcastRecvMessageResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.BroadcastRecvMessageResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.BroadcastRecvMessageResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.BroadcastRecvMessageResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.BroadcastRecvMessageResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetConfigsResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetConfigsResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetConfigsResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConfigsResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetConfigsResponseBody}
 */
proto.douyin.GetConfigsResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetConfigsResponseBody;
  return proto.douyin.GetConfigsResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetConfigsResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetConfigsResponseBody}
 */
proto.douyin.GetConfigsResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetConfigsResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetConfigsResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetConfigsResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetConfigsResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.UnReadCountReportResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.UnReadCountReportResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.UnReadCountReportResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.UnReadCountReportResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.UnReadCountReportResponseBody}
 */
proto.douyin.UnReadCountReportResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.UnReadCountReportResponseBody;
  return proto.douyin.UnReadCountReportResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.UnReadCountReportResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.UnReadCountReportResponseBody}
 */
proto.douyin.UnReadCountReportResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.UnReadCountReportResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.UnReadCountReportResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.UnReadCountReportResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.UnReadCountReportResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.MessageByInitResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.MessageByInitResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.MessageByInitResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MessageByInitResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.MessageByInitResponseBody}
 */
proto.douyin.MessageByInitResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.MessageByInitResponseBody;
  return proto.douyin.MessageByInitResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.MessageByInitResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.MessageByInitResponseBody}
 */
proto.douyin.MessageByInitResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.MessageByInitResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.MessageByInitResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.MessageByInitResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.MessageByInitResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.GetUserMessageResponseBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.GetUserMessageResponseBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.GetUserMessageResponseBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetUserMessageResponseBody.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.GetUserMessageResponseBody}
 */
proto.douyin.GetUserMessageResponseBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.GetUserMessageResponseBody;
  return proto.douyin.GetUserMessageResponseBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.GetUserMessageResponseBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.GetUserMessageResponseBody}
 */
proto.douyin.GetUserMessageResponseBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.GetUserMessageResponseBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.GetUserMessageResponseBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.GetUserMessageResponseBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.GetUserMessageResponseBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


goog.object.extend(exports, proto.douyin);
