// source: SendMessageRequestBody.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var ReferencedMessageInfo_pb = require('./ReferencedMessageInfo_pb.js');
goog.object.extend(proto, ReferencedMessageInfo_pb);
goog.exportSymbol('proto.douyin.SendMessageRequestBody', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.SendMessageRequestBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.douyin.SendMessageRequestBody.repeatedFields_, null);
};
goog.inherits(proto.douyin.SendMessageRequestBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.SendMessageRequestBody.displayName = 'proto.douyin.SendMessageRequestBody';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.douyin.SendMessageRequestBody.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.SendMessageRequestBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.SendMessageRequestBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.SendMessageRequestBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.SendMessageRequestBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    conversationType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    conversationShortId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    extMap: (f = msg.getExtMap()) ? f.toObject(includeInstance, undefined) : [],
    messageType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    ticket: jspb.Message.getFieldWithDefault(msg, 7, ""),
    clientMessageId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    mentionedUsersList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    ignoreBadgeCount: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    refMsgInfo: (f = msg.getRefMsgInfo()) && ReferencedMessageInfo_pb.ReferencedMessageInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.SendMessageRequestBody}
 */
proto.douyin.SendMessageRequestBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.SendMessageRequestBody;
  return proto.douyin.SendMessageRequestBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.SendMessageRequestBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.SendMessageRequestBody}
 */
proto.douyin.SendMessageRequestBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConversationId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConversationType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setConversationShortId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = msg.getExtMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicket(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientMessageId(value);
      break;
    case 9:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMentionedUsers(values[i]);
      }
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIgnoreBadgeCount(value);
      break;
    case 11:
      var value = new ReferencedMessageInfo_pb.ReferencedMessageInfo;
      reader.readMessage(value,ReferencedMessageInfo_pb.ReferencedMessageInfo.deserializeBinaryFromReader);
      msg.setRefMsgInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.SendMessageRequestBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.SendMessageRequestBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.SendMessageRequestBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.SendMessageRequestBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConversationType();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getConversationShortId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExtMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMessageType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTicket();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getClientMessageId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMentionedUsersList();
  if (f.length > 0) {
    writer.writePackedInt64(
      9,
      f
    );
  }
  f = message.getIgnoreBadgeCount();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getRefMsgInfo();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      ReferencedMessageInfo_pb.ReferencedMessageInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string conversation_id = 1;
 * @return {string}
 */
proto.douyin.SendMessageRequestBody.prototype.getConversationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setConversationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 conversation_type = 2;
 * @return {number}
 */
proto.douyin.SendMessageRequestBody.prototype.getConversationType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setConversationType = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 conversation_short_id = 3;
 * @return {number}
 */
proto.douyin.SendMessageRequestBody.prototype.getConversationShortId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setConversationShortId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.douyin.SendMessageRequestBody.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * map<string, string> ext = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.douyin.SendMessageRequestBody.prototype.getExtMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.clearExtMap = function() {
  this.getExtMap().clear();
  return this;};


/**
 * optional int32 message_type = 6;
 * @return {number}
 */
proto.douyin.SendMessageRequestBody.prototype.getMessageType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setMessageType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string ticket = 7;
 * @return {string}
 */
proto.douyin.SendMessageRequestBody.prototype.getTicket = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setTicket = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string client_message_id = 8;
 * @return {string}
 */
proto.douyin.SendMessageRequestBody.prototype.getClientMessageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setClientMessageId = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated int64 mentioned_users = 9;
 * @return {!Array<number>}
 */
proto.douyin.SendMessageRequestBody.prototype.getMentionedUsersList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setMentionedUsersList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.addMentionedUsers = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.clearMentionedUsersList = function() {
  return this.setMentionedUsersList([]);
};


/**
 * optional bool ignore_badge_count = 10;
 * @return {boolean}
 */
proto.douyin.SendMessageRequestBody.prototype.getIgnoreBadgeCount = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.setIgnoreBadgeCount = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional ReferencedMessageInfo ref_msg_info = 11;
 * @return {?proto.douyin.ReferencedMessageInfo}
 */
proto.douyin.SendMessageRequestBody.prototype.getRefMsgInfo = function() {
  return /** @type{?proto.douyin.ReferencedMessageInfo} */ (
    jspb.Message.getWrapperField(this, ReferencedMessageInfo_pb.ReferencedMessageInfo, 11));
};


/**
 * @param {?proto.douyin.ReferencedMessageInfo|undefined} value
 * @return {!proto.douyin.SendMessageRequestBody} returns this
*/
proto.douyin.SendMessageRequestBody.prototype.setRefMsgInfo = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.SendMessageRequestBody} returns this
 */
proto.douyin.SendMessageRequestBody.prototype.clearRefMsgInfo = function() {
  return this.setRefMsgInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.SendMessageRequestBody.prototype.hasRefMsgInfo = function() {
  return jspb.Message.getField(this, 11) != null;
};


goog.object.extend(exports, proto.douyin);
