// source: CreateConversationV2RequestBody.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.douyin.CreateConversationV2RequestBody', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.CreateConversationV2RequestBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.douyin.CreateConversationV2RequestBody.repeatedFields_, null);
};
goog.inherits(proto.douyin.CreateConversationV2RequestBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.CreateConversationV2RequestBody.displayName = 'proto.douyin.CreateConversationV2RequestBody';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.douyin.CreateConversationV2RequestBody.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.CreateConversationV2RequestBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.CreateConversationV2RequestBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.CreateConversationV2RequestBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    participantsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    persistent: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    idempotentId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 7, ""),
    description: jspb.Message.getFieldWithDefault(msg, 8, ""),
    bizExtMap: (f = msg.getBizExtMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.CreateConversationV2RequestBody}
 */
proto.douyin.CreateConversationV2RequestBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.CreateConversationV2RequestBody;
  return proto.douyin.CreateConversationV2RequestBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.CreateConversationV2RequestBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.CreateConversationV2RequestBody}
 */
proto.douyin.CreateConversationV2RequestBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConversationType(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt64() : [reader.readInt64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addParticipants(values[i]);
      }
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPersistent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdempotentId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 11:
      var value = msg.getBizExtMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.CreateConversationV2RequestBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.CreateConversationV2RequestBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.CreateConversationV2RequestBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getParticipantsList();
  if (f.length > 0) {
    writer.writePackedInt64(
      2,
      f
    );
  }
  f = message.getPersistent();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIdempotentId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBizExtMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional int32 conversation_type = 1;
 * @return {number}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getConversationType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.setConversationType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated int64 participants = 2;
 * @return {!Array<number>}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getParticipantsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.setParticipantsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.addParticipants = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.clearParticipantsList = function() {
  return this.setParticipantsList([]);
};


/**
 * optional bool persistent = 3;
 * @return {boolean}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getPersistent = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.setPersistent = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string idempotent_id = 4;
 * @return {string}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getIdempotentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.setIdempotentId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string avatar_url = 7;
 * @return {string}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string description = 8;
 * @return {string}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * map<string, string> biz_ext = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.douyin.CreateConversationV2RequestBody.prototype.getBizExtMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.douyin.CreateConversationV2RequestBody} returns this
 */
proto.douyin.CreateConversationV2RequestBody.prototype.clearBizExtMap = function() {
  this.getBizExtMap().clear();
  return this;};


goog.object.extend(exports, proto.douyin);
