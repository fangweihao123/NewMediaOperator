// source: Request.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var TokenInfo_pb = require('./TokenInfo_pb.js');
goog.object.extend(proto, TokenInfo_pb);
var RequestBody_pb = require('./RequestBody_pb.js');
goog.object.extend(proto, RequestBody_pb);
goog.exportSymbol('proto.douyin.Request', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.douyin.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.douyin.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.douyin.Request.displayName = 'proto.douyin.Request';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.douyin.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.douyin.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.douyin.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    cmd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sequenceId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sdkVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    token: jspb.Message.getFieldWithDefault(msg, 4, ""),
    refer: jspb.Message.getFieldWithDefault(msg, 5, 0),
    inboxType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    buildNumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    body: (f = msg.getBody()) && RequestBody_pb.RequestBody.toObject(includeInstance, f),
    deviceId: jspb.Message.getFieldWithDefault(msg, 9, ""),
    channel: jspb.Message.getFieldWithDefault(msg, 10, ""),
    devicePlatform: jspb.Message.getFieldWithDefault(msg, 11, ""),
    deviceType: jspb.Message.getFieldWithDefault(msg, 12, ""),
    osVersion: jspb.Message.getFieldWithDefault(msg, 13, ""),
    versionCode: jspb.Message.getFieldWithDefault(msg, 14, ""),
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    configId: jspb.Message.getFieldWithDefault(msg, 16, 0),
    tokenInfo: (f = msg.getTokenInfo()) && TokenInfo_pb.TokenInfo.toObject(includeInstance, f),
    authType: jspb.Message.getFieldWithDefault(msg, 18, 0),
    biz: jspb.Message.getFieldWithDefault(msg, 21, ""),
    access: jspb.Message.getFieldWithDefault(msg, 22, ""),
    tsSign: jspb.Message.getFieldWithDefault(msg, 23, ""),
    sdkCert: jspb.Message.getFieldWithDefault(msg, 24, ""),
    reuqestSign: jspb.Message.getFieldWithDefault(msg, 25, ""),
    iterVersion: jspb.Message.getFieldWithDefault(msg, 103, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 104, 0),
    pdesVersion: jspb.Message.getFieldWithDefault(msg, 110, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.douyin.Request}
 */
proto.douyin.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.douyin.Request;
  return proto.douyin.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.douyin.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.douyin.Request}
 */
proto.douyin.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCmd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSequenceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdkVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefer(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInboxType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuildNumber(value);
      break;
    case 8:
      var value = new RequestBody_pb.RequestBody;
      reader.readMessage(value,RequestBody_pb.RequestBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setChannel(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevicePlatform(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceType(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsVersion(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersionCode(value);
      break;
    case 15:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConfigId(value);
      break;
    case 17:
      var value = new TokenInfo_pb.TokenInfo;
      reader.readMessage(value,TokenInfo_pb.TokenInfo.deserializeBinaryFromReader);
      msg.setTokenInfo(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAuthType(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setBiz(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccess(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setTsSign(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setSdkCert(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setReuqestSign(value);
      break;
    case 103:
      var value = /** @type {string} */ (reader.readString());
      msg.setIterVersion(value);
      break;
    case 104:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 110:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPdesVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.douyin.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.douyin.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.douyin.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.douyin.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCmd();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSequenceId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSdkVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRefer();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getInboxType();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getBuildNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      RequestBody_pb.RequestBody.serializeBinaryToWriter
    );
  }
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getDevicePlatform();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDeviceType();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getOsVersion();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getVersionCode();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(15, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getConfigId();
  if (f !== 0) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getTokenInfo();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      TokenInfo_pb.TokenInfo.serializeBinaryToWriter
    );
  }
  f = message.getAuthType();
  if (f !== 0) {
    writer.writeInt32(
      18,
      f
    );
  }
  f = message.getBiz();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getAccess();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getTsSign();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getSdkCert();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getReuqestSign();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getIterVersion();
  if (f.length > 0) {
    writer.writeString(
      103,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      104,
      f
    );
  }
  f = message.getPdesVersion();
  if (f !== 0) {
    writer.writeInt32(
      110,
      f
    );
  }
};


/**
 * optional int32 cmd = 1;
 * @return {number}
 */
proto.douyin.Request.prototype.getCmd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setCmd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 sequence_id = 2;
 * @return {number}
 */
proto.douyin.Request.prototype.getSequenceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setSequenceId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string sdk_version = 3;
 * @return {string}
 */
proto.douyin.Request.prototype.getSdkVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setSdkVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string token = 4;
 * @return {string}
 */
proto.douyin.Request.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 refer = 5;
 * @return {number}
 */
proto.douyin.Request.prototype.getRefer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setRefer = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 inbox_type = 6;
 * @return {number}
 */
proto.douyin.Request.prototype.getInboxType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setInboxType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string build_number = 7;
 * @return {string}
 */
proto.douyin.Request.prototype.getBuildNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setBuildNumber = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional RequestBody body = 8;
 * @return {?proto.douyin.RequestBody}
 */
proto.douyin.Request.prototype.getBody = function() {
  return /** @type{?proto.douyin.RequestBody} */ (
    jspb.Message.getWrapperField(this, RequestBody_pb.RequestBody, 8));
};


/**
 * @param {?proto.douyin.RequestBody|undefined} value
 * @return {!proto.douyin.Request} returns this
*/
proto.douyin.Request.prototype.setBody = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.clearBody = function() {
  return this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.Request.prototype.hasBody = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string device_id = 9;
 * @return {string}
 */
proto.douyin.Request.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setDeviceId = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string channel = 10;
 * @return {string}
 */
proto.douyin.Request.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string device_platform = 11;
 * @return {string}
 */
proto.douyin.Request.prototype.getDevicePlatform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setDevicePlatform = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string device_type = 12;
 * @return {string}
 */
proto.douyin.Request.prototype.getDeviceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setDeviceType = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string os_version = 13;
 * @return {string}
 */
proto.douyin.Request.prototype.getOsVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setOsVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string version_code = 14;
 * @return {string}
 */
proto.douyin.Request.prototype.getVersionCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setVersionCode = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * map<string, string> headers = 15;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.douyin.Request.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 15, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
  return this;};


/**
 * optional int32 config_id = 16;
 * @return {number}
 */
proto.douyin.Request.prototype.getConfigId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setConfigId = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional TokenInfo token_info = 17;
 * @return {?proto.douyin.TokenInfo}
 */
proto.douyin.Request.prototype.getTokenInfo = function() {
  return /** @type{?proto.douyin.TokenInfo} */ (
    jspb.Message.getWrapperField(this, TokenInfo_pb.TokenInfo, 17));
};


/**
 * @param {?proto.douyin.TokenInfo|undefined} value
 * @return {!proto.douyin.Request} returns this
*/
proto.douyin.Request.prototype.setTokenInfo = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.clearTokenInfo = function() {
  return this.setTokenInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.douyin.Request.prototype.hasTokenInfo = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int32 auth_type = 18;
 * @return {number}
 */
proto.douyin.Request.prototype.getAuthType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setAuthType = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string biz = 21;
 * @return {string}
 */
proto.douyin.Request.prototype.getBiz = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setBiz = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string access = 22;
 * @return {string}
 */
proto.douyin.Request.prototype.getAccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setAccess = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string ts_sign = 23;
 * @return {string}
 */
proto.douyin.Request.prototype.getTsSign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setTsSign = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string sdk_cert = 24;
 * @return {string}
 */
proto.douyin.Request.prototype.getSdkCert = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setSdkCert = function(value) {
  return jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string reuqest_sign = 25;
 * @return {string}
 */
proto.douyin.Request.prototype.getReuqestSign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setReuqestSign = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string iter_version = 103;
 * @return {string}
 */
proto.douyin.Request.prototype.getIterVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 103, ""));
};


/**
 * @param {string} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setIterVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 103, value);
};


/**
 * optional int64 timestamp = 104;
 * @return {number}
 */
proto.douyin.Request.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 104, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 104, value);
};


/**
 * optional int32 pdes_version = 110;
 * @return {number}
 */
proto.douyin.Request.prototype.getPdesVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 110, 0));
};


/**
 * @param {number} value
 * @return {!proto.douyin.Request} returns this
 */
proto.douyin.Request.prototype.setPdesVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 110, value);
};


goog.object.extend(exports, proto.douyin);
